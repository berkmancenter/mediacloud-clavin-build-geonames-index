name: Build index, release package

on: [push]

jobs:

  create_pkg:

    name: Create package
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.5

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Print tool versions
        run: |
          java --version
          mvn --version
          if [ -d ~/.m2/ ]; then find ~/.m2/; done

      - name: Update APT listing
        run: sudo apt-get -y update

      - name: Install utility packages
        run: sudo apt-get -y install pv unzip

      - name: Download the latest version of allCountries.zip gazetteer file from GeoNames.org
        run: |
          curl -O http://download.geonames.org/export/dump/allCountries.zip
          unzip allCountries.zip
          rm allCountries.zip
          mv allCountries.txt CLAVIN/

      - name: Build CLAVIN
        run: |
          cd CLAVIN/
          mvn compile
          cd ../ 
          mv ./logback.xml ./CLAVIN/target/classes/logback.xml

      - name: Create Lucene index
        run: |
          cd CLAVIN/
          mvn exec:java -Dexec.mainClass="com.bericotech.clavin.index.IndexDirectoryBuilder"
          cd ../
        env:
          MAVEN_OPTS: "-Xmx4g"

      - name: Compress index directory
        run: |
          cd CLAVIN/
          tar -cf ../IndexDirectory.tar IndexDirectory/
          cd ../
          pv IndexDirectory.tar | gzip -v9 > IndexDirectory.tar.gz
          echo 'Resulting tarball is' $(du -h IndexDirectory.tar.gz | cut -f 1) '; should be 900M at minimum'
          if [ $(du -k IndexDirectory.tar.gz | cut -f 1) -le $((1024 * 900)) ]; then echo "Resulting tarball is too small; build failed"; exit 1; fi

      - name: Set default package version
        run: |
          export PKG_VERSION=$(git rev-parse --short HEAD)
          echo "Default package version: ${PKG_VERSION}"
          echo "::set-env name=PKG_VERSION::${PKG_VERSION}"
          if [[ -z "${PKG_VERSION}" ]]; then echo "Unable to determine HEAD commit hash."; exit 1; fi

      - name: Set tag package version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export PKG_VERSION=$(git describe --tags)
          echo "Tag package version: ${PKG_VERSION}"
          echo "::set-env name=PKG_VERSION::${PKG_VERSION}"
          if [[ -z "${PKG_VERSION}" ]]; then echo "Unable to determine tag."; exit 1; fi

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        id: created_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.PKG_VERSION }}
          release_name: ${{ env.PKG_VERSION }}
          draft: true
          prerelease: false

      - name: Add .zip file to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.created_release.outputs.upload_url }}
          asset_path: IndexDirectory.tar.gz
          asset_name: IndexDirectory.tar.gz
          asset_content_type: application/gzip
